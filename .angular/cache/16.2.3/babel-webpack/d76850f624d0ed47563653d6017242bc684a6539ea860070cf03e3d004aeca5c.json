{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nexport let Task4Component = class Task4Component {\n  constructor() {\n    this.inputFieldStyle = 'height: 10px; padding: 10px; margin: 0px 10px';\n    // to recieve values from parent\n    this.titles = [];\n    // to pass values to parent\n    this.titleEvent$ = new EventEmitter();\n  }\n  detectInput(title) {\n    this.titleEvent$.emit(title.target.value);\n    console.log(title.target.value);\n  }\n};\n__decorate([Input({\n  required: true\n})], Task4Component.prototype, \"titles\", void 0);\n__decorate([Output()], Task4Component.prototype, \"titleEvent$\", void 0);\nTask4Component = __decorate([Component({\n  selector: 'app-task4',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule],\n  templateUrl: './task4.component.html',\n  styleUrls: ['./task4.component.scss']\n})], Task4Component);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","CommonModule","MatButtonModule","Task4Component","constructor","inputFieldStyle","titles","titleEvent$","detectInput","title","emit","target","value","console","log","__decorate","required","selector","standalone","imports","templateUrl","styleUrls"],"sources":["D:\\Assignments\\Angular\\angularBasics\\src\\app\\components\\task4\\task4.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-task4',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule],\n  templateUrl: './task4.component.html',\n  styleUrls: ['./task4.component.scss']\n})\nexport class Task4Component {\n\n  inputFieldStyle: string = 'height: 10px; padding: 10px; margin: 0px 10px';\n\n  // to recieve values from parent\n  @Input({required: true}) titles: string[] = [];\n\n\n  // to pass values to parent\n  @Output() titleEvent$ = new EventEmitter<string>();\n\n  detectInput(title: any): void {\n    this.titleEvent$.emit(title.target.value);\n    console.log(title.target.value);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACtE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,0BAA0B;AASnD,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAApBC,YAAA;IAEL,KAAAC,eAAe,GAAW,+CAA+C;IAEzE;IACyB,KAAAC,MAAM,GAAa,EAAE;IAG9C;IACU,KAAAC,WAAW,GAAG,IAAIT,YAAY,EAAU;EAMpD;EAJEU,WAAWA,CAACC,KAAU;IACpB,IAAI,CAACF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACzCC,OAAO,CAACC,GAAG,CAACL,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACjC;CACD;AAV0BG,UAAA,EAAxBhB,KAAK,CAAC;EAACiB,QAAQ,EAAE;AAAI,CAAC,CAAC,C,6CAAuB;AAIrCD,UAAA,EAATf,MAAM,EAAE,C,kDAA0C;AATxCG,cAAc,GAAAY,UAAA,EAP1BlB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAClB,YAAY,EAAEC,eAAe,CAAC;EACxCkB,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWlB,cAAc,CAe1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}