{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/button\";\nfunction Task4Component_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3)(2, \"mat-card\")(3, \"mat-card-header\")(4, \"mat-card-title\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"button\", 4);\n    i0.ɵɵtext(8, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 4);\n    i0.ɵɵtext(10, \"SHARE\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(user_r2);\n  }\n}\nexport class Task4Component {\n  constructor() {\n    this.inputFieldStyle = 'height: 10px; padding: 10px; margin: 0px 10px';\n    // to recieve values from parent\n    this.titles = [];\n    // to pass values to parent\n    this.titleEvent$ = new EventEmitter();\n  }\n  detectInput(title) {\n    this.titleEvent$.emit(title);\n    console.log(title);\n  }\n}\n_class = Task4Component;\n_class.ɵfac = function Task4Component_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-task4\"]],\n  inputs: {\n    titles: \"titles\"\n  },\n  outputs: {\n    titleEvent$: \"titleEvent$\"\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 5,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"username\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"card-wrapper\"], [\"mat-button\", \"\"]],\n  template: function Task4Component_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, Task4Component_ng_container_0_Template, 11, 1, \"ng-container\", 0);\n      i0.ɵɵelement(1, \"input\", null, 1);\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function Task4Component_Template_button_click_3_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r1 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.detectInput(_r1.value));\n      });\n      i0.ɵɵtext(4, \"Press to add Users\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.titles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(ctx.inputFieldStyle);\n    }\n  },\n  dependencies: [CommonModule, i1.NgForOf, MatCardModule, i2.MatCard, i2.MatCardContent, i2.MatCardHeader, i2.MatCardTitle, MatButtonModule, i3.MatButton],\n  styles: [\"mat-card[_ngcontent-%COMP%] {\\n  margin: 5px;\\n  background-color: rgb(43, 126, 126);\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrNC90YXNrNC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNJLFdBQUE7RUFDQSxtQ0FBQTtFQUNBLFlBQUE7QUFISiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLXdyYXBwZXJ7XHJcbiAgICBcclxufVxyXG5cclxubWF0LWNhcmR7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MywgMTI2LCAxMjYpO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["EventEmitter","CommonModule","MatButtonModule","MatCardModule","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","user_r2","Task4Component","constructor","inputFieldStyle","titles","titleEvent$","detectInput","title","emit","console","log","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","Task4Component_Template","rf","ctx","ɵɵtemplate","Task4Component_ng_container_0_Template","ɵɵelement","ɵɵlistener","Task4Component_Template_button_click_3_listener","ɵɵrestoreView","_r3","_r1","ɵɵreference","ɵɵresetView","value","ɵɵproperty","ɵɵstyleMap","i1","NgForOf","i2","MatCard","MatCardContent","MatCardHeader","MatCardTitle","i3","MatButton","styles"],"sources":["D:\\Assignments\\Angular\\angularBasics\\src\\app\\components\\task4\\task4.component.ts","D:\\Assignments\\Angular\\angularBasics\\src\\app\\components\\task4\\task4.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-task4',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatButtonModule],\n  templateUrl: './task4.component.html',\n  styleUrls: ['./task4.component.scss']\n})\nexport class Task4Component {\n\n  inputFieldStyle: string = 'height: 10px; padding: 10px; margin: 0px 10px';\n\n  // to recieve values from parent\n  @Input({required: true}) titles: string[] = [];\n\n\n  // to pass values to parent\n  @Output() titleEvent$ = new EventEmitter<string>();\n\n  detectInput(title: any): void {\n    this.titleEvent$.emit(title);\n    console.log(title);\n  }\n}\n","<ng-container *ngFor=\"let user of titles\">\n    <!-- <p>{{ user }}</p> -->\n    <div class=\"card-wrapper\">\n        <mat-card>\n            <mat-card-header>\n              <mat-card-title>{{ user }}</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n              <button mat-button>\n                Delete\n              </button>\n              <button mat-button>SHARE</button>\n            </mat-card-content>\n          </mat-card>\n    </div>\n</ng-container>\n\n<!-- detect and print immediately -->\n<!-- <input type=\"text\" (input)=\"detectInput($event)\"> -->\n<input [style]=\"inputFieldStyle\" #username>\n<button mat-raised-button color=\"primary\" (click)=\"detectInput(username.value)\">Press to add Users</button>"],"mappings":";AAAA,SAAoBA,YAAY,QAAuB,eAAe;AACtE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,aAAa,QAAQ,wBAAwB;;;;;;;ICHtDC,EAAA,CAAAC,uBAAA,GAA0C;IAEtCD,EAAA,CAAAE,cAAA,aAA0B;IAGAF,EAAA,CAAAG,MAAA,GAAU;IAAAH,EAAA,CAAAI,YAAA,EAAiB;IAE7CJ,EAAA,CAAAE,cAAA,uBAAkB;IAEdF,EAAA,CAAAG,MAAA,eACF;IAAAH,EAAA,CAAAI,YAAA,EAAS;IACTJ,EAAA,CAAAE,cAAA,gBAAmB;IAAAF,EAAA,CAAAG,MAAA,aAAK;IAAAH,EAAA,CAAAI,YAAA,EAAS;IAI/CJ,EAAA,CAAAK,qBAAA,EAAe;;;;IAVeL,EAAA,CAAAM,SAAA,GAAU;IAAVN,EAAA,CAAAO,iBAAA,CAAAC,OAAA,CAAU;;;ADOxC,OAAM,MAAOC,cAAc;EAP3BC,YAAA;IASE,KAAAC,eAAe,GAAW,+CAA+C;IAEzE;IACyB,KAAAC,MAAM,GAAa,EAAE;IAG9C;IACU,KAAAC,WAAW,GAAG,IAAIjB,YAAY,EAAU;;EAElDkB,WAAWA,CAACC,KAAU;IACpB,IAAI,CAACF,WAAW,CAACG,IAAI,CAACD,KAAK,CAAC;IAC5BE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACpB;;SAdWN,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA,MAAc;EAAAU,SAAA;EAAAC,MAAA;IAAAR,MAAA;EAAA;EAAAS,OAAA;IAAAR,WAAA;EAAA;EAAAS,UAAA;EAAAC,QAAA,GAAAvB,EAAA,CAAAwB,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCZ3B9B,EAAA,CAAAgC,UAAA,IAAAC,sCAAA,2BAee;MAIfjC,EAAA,CAAAkC,SAAA,qBAA2C;MAC3ClC,EAAA,CAAAE,cAAA,gBAAgF;MAAtCF,EAAA,CAAAmC,UAAA,mBAAAC,gDAAA;QAAApC,EAAA,CAAAqC,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAvC,EAAA,CAAAwC,WAAA;QAAA,OAASxC,EAAA,CAAAyC,WAAA,CAAAV,GAAA,CAAAjB,WAAA,CAAAyB,GAAA,CAAAG,KAAA,CAA2B;MAAA,EAAC;MAAC1C,EAAA,CAAAG,MAAA,yBAAkB;MAAAH,EAAA,CAAAI,YAAA,EAAS;;;MApB5EJ,EAAA,CAAA2C,UAAA,YAAAZ,GAAA,CAAAnB,MAAA,CAAS;MAmBjCZ,EAAA,CAAAM,SAAA,GAAyB;MAAzBN,EAAA,CAAA4C,UAAA,CAAAb,GAAA,CAAApB,eAAA,CAAyB;;;iBDXpBd,YAAY,EAAAgD,EAAA,CAAAC,OAAA,EAAE/C,aAAa,EAAAgD,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,cAAA,EAAAF,EAAA,CAAAG,aAAA,EAAAH,EAAA,CAAAI,YAAA,EAAErD,eAAe,EAAAsD,EAAA,CAAAC,SAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}