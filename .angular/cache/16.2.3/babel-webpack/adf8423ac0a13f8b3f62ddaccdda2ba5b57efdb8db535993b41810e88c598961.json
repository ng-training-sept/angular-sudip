{"ast":null,"code":"var _class;\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/material/button\";\nexport class CardComponent {\n  constructor() {\n    this.message = {\n      greetings: 'Hola! Comos Estas',\n      port: 4200,\n      status: 'Working | All Good'\n    };\n    // imageUrl: string = 'https://material.angular.io/assets/img/examples/shiba2.jpg';\n    this.isLikeDisabled = false;\n    this.isShareDisabled = true;\n    this.count = 0;\n  }\n  getServerStatus() {\n    return this.message.status;\n  }\n  onLike() {\n    this.isShareDisabled == true ? this.isShareDisabled = false : this.isShareDisabled = true;\n    this.count += 1;\n  }\n}\n_class = CardComponent;\n_class.ɵfac = function CardComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-card\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 15,\n  vars: 6,\n  consts: [[\"mat-button\", \"\", 1, \"like-btn\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", 3, \"disabled\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template_button_click_9_listener() {\n        return ctx.onLike();\n      });\n      i0.ɵɵtext(10, \"LIKE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵtext(14, \"SHARE\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.message.greetings);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"I am running on port \", ctx.message.port, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Status: \", ctx.getServerStatus(), \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.isLikeDisabled);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Count: \", ctx.count, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.isShareDisabled);\n    }\n  },\n  dependencies: [CommonModule, MatCardModule, i1.MatCard, i1.MatCardContent, i1.MatCardHeader, i1.MatCardTitle, MatButtonModule, i2.MatButton],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 463:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nexpected \\\\\\\"{\\\\\\\".\\\\n   \\u2577\\\\n15 \\u2502 button []\\\\n   \\u2502          ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\components\\\\\\\\card\\\\\\\\card.component.scss 15:10  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[463]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n});","map":{"version":3,"names":["CommonModule","MatCardModule","MatButtonModule","CardComponent","constructor","message","greetings","port","status","isLikeDisabled","isShareDisabled","count","getServerStatus","onLike","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","CardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CardComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵproperty","i1","MatCard","MatCardContent","MatCardHeader","MatCardTitle","i2","MatButton","styles"],"sources":["D:\\Assignments\\Angular\\angularBasics\\src\\app\\components\\card\\card.component.ts","D:\\Assignments\\Angular\\angularBasics\\src\\app\\components\\card\\card.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatButtonModule],\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  message: { greetings: string; port: number; status: string } = {\n    greetings: 'Hola! Comos Estas',\n    port: 4200,\n    status: 'Working | All Good',\n  };\n\n  getServerStatus(): string {\n    return this.message.status;\n  }\n\n  // imageUrl: string = 'https://material.angular.io/assets/img/examples/shiba2.jpg';\n\n  isLikeDisabled: boolean = false;\n  isShareDisabled: boolean = true;\n\n  count: number = 0;\n  \n\n  onLike(): void {\n    this.isShareDisabled == true ? this.isShareDisabled = false : this.isShareDisabled = true;\n    this.count +=1;\n  }\n}\n","\n\n<mat-card>\n    <mat-card-header>\n      <mat-card-title>{{ message.greetings }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <p>I am running on port {{ message.port }}</p>\n      <p>Status: {{ getServerStatus() }}</p>\n      <!-- <img [src]=\"imageUrl\" alt=\"shiba\"> -->\n      <button class=\"like-btn\" mat-button [disabled]=\"isLikeDisabled\" (click)=\"onLike()\">LIKE</button>\n      <p>Count: {{ count }}</p>\n      <button mat-button [disabled]=\"isShareDisabled\">SHARE</button>\n    </mat-card-content>\n</mat-card>\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;;;;AAS1D,OAAM,MAAOC,aAAa;EAP1BC,YAAA;IAQE,KAAAC,OAAO,GAAwD;MAC7DC,SAAS,EAAE,mBAAmB;MAC9BC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE;KACT;IAMD;IAEA,KAAAC,cAAc,GAAY,KAAK;IAC/B,KAAAC,eAAe,GAAY,IAAI;IAE/B,KAAAC,KAAK,GAAW,CAAC;;EATjBC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACP,OAAO,CAACG,MAAM;EAC5B;EAUAK,MAAMA,CAAA;IACJ,IAAI,CAACH,eAAe,IAAI,IAAI,GAAG,IAAI,CAACA,eAAe,GAAG,KAAK,GAAG,IAAI,CAACA,eAAe,GAAG,IAAI;IACzF,IAAI,CAACC,KAAK,IAAG,CAAC;EAChB;;SAtBWR,aAAa;;mBAAbA,MAAa;AAAA;;QAAbA,MAAa;EAAAW,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV1BP,EAAA,CAAAS,cAAA,eAAU;MAEYT,EAAA,CAAAU,MAAA,GAAuB;MAAAV,EAAA,CAAAW,YAAA,EAAiB;MAE1DX,EAAA,CAAAS,cAAA,uBAAkB;MACbT,EAAA,CAAAU,MAAA,GAAuC;MAAAV,EAAA,CAAAW,YAAA,EAAI;MAC9CX,EAAA,CAAAS,cAAA,QAAG;MAAAT,EAAA,CAAAU,MAAA,GAA+B;MAAAV,EAAA,CAAAW,YAAA,EAAI;MAEtCX,EAAA,CAAAS,cAAA,gBAAmF;MAAnBT,EAAA,CAAAY,UAAA,mBAAAC,+CAAA;QAAA,OAASL,GAAA,CAAAZ,MAAA,EAAQ;MAAA,EAAC;MAACI,EAAA,CAAAU,MAAA,YAAI;MAAAV,EAAA,CAAAW,YAAA,EAAS;MAChGX,EAAA,CAAAS,cAAA,SAAG;MAAAT,EAAA,CAAAU,MAAA,IAAkB;MAAAV,EAAA,CAAAW,YAAA,EAAI;MACzBX,EAAA,CAAAS,cAAA,iBAAgD;MAAAT,EAAA,CAAAU,MAAA,aAAK;MAAAV,EAAA,CAAAW,YAAA,EAAS;;;MAR9CX,EAAA,CAAAc,SAAA,GAAuB;MAAvBd,EAAA,CAAAe,iBAAA,CAAAP,GAAA,CAAApB,OAAA,CAAAC,SAAA,CAAuB;MAGpCW,EAAA,CAAAc,SAAA,GAAuC;MAAvCd,EAAA,CAAAgB,kBAAA,0BAAAR,GAAA,CAAApB,OAAA,CAAAE,IAAA,KAAuC;MACvCU,EAAA,CAAAc,SAAA,GAA+B;MAA/Bd,EAAA,CAAAgB,kBAAA,aAAAR,GAAA,CAAAb,eAAA,OAA+B;MAEEK,EAAA,CAAAc,SAAA,GAA2B;MAA3Bd,EAAA,CAAAiB,UAAA,aAAAT,GAAA,CAAAhB,cAAA,CAA2B;MAC5DQ,EAAA,CAAAc,SAAA,GAAkB;MAAlBd,EAAA,CAAAgB,kBAAA,YAAAR,GAAA,CAAAd,KAAA,KAAkB;MACFM,EAAA,CAAAc,SAAA,GAA4B;MAA5Bd,EAAA,CAAAiB,UAAA,aAAAT,GAAA,CAAAf,eAAA,CAA4B;;;iBDJzCV,YAAY,EAAEC,aAAa,EAAAkC,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,cAAA,EAAAF,EAAA,CAAAG,aAAA,EAAAH,EAAA,CAAAI,YAAA,EAAErC,eAAe,EAAAsC,EAAA,CAAAC,SAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}